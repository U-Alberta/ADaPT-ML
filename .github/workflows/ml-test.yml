# This is a workflow containing an automated test suite covering the core functionality of the software.

name: ADaPT-ML Modelling CI for Linux, Mac, and Windows

on: [push]

jobs:

  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-2022 ]

    defaults:
      run:
        shell: bash
#        include:
#          - os: ubuntu-latest
#            timer: sleep
#          - os: macos-latest
#            timer: sleep
#          - os: windows-latest
#            timer: timeout

    steps:
    - uses: actions/checkout@v2

    - name: If this is the MacOS runner, install Docker
      if: matrix.os == 'macos-latest'
      run: |
        mkdir -p ~/.docker/machine/cache \
        curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.12/boot2docker.iso \
        brew install docker docker-machine \
        docker-machine create --driver virtualbox default \
        docker-machine env default \
        eval "$(docker-machine env default)"

#        brew install docker docker-machine \
#        brew cask install virtualbox \
#        docker-machine create --driver virtualbox default \
#        docker-machine env default \
#        eval "$(docker-machine env default)"

#        HOMEBREW_NO_AUTO_UPDATE=1
#        brew install --cask docker
#        sudo /Applications/Docker.app/Contents/MacOS/Docker --unattended --install-privileged-components
#        open -a /Applications/Docker.app --args --unattended --accept-license
#        echo "We are waiting for Docker to be up and running. It can take over 2 minutes..."
#        while ! /Applications/Docker.app/Contents/Resources/bin/docker info &>/dev/null; do sleep 1; done

    - name: Build the docker-compose profile and test modelling
      run: bash ./test/start-m.sh

#    - name: Build the docker-compose profile
#      run: docker-compose --env-file .env --profile modelling up -d
#
#    - name: Give database a chance to start up
#      env:
#        TIMER: ${{ matrix.timer }}
#      run: $TIMER 30
#
#    - name: Test modelling
#      run: docker exec modelling-mlflow sh -c ". ~/.bashrc && python /test/ml-test.py"
