version: '3.3'

services:
  ls_pv_web_1:
    restart: on-failure
    image: heartexlabs/label-studio:latest
    container_name: label-studio-web-1
    ports:
      - "8080:8080"
    networks:
      - ls_network
    volumes:
      - ${LS_PATH}/pv_project:/label-studio/pv_project
      - ./config/pv_config.xml:/pv_config.xml
      - ${LS_PATH}/pv_tasks:/pv_tasks
    command: label-studio start pv_project --init --force --label-config=/pv_config.xml --input-path=/pv_tasks --input-format=json-dir
  ls_pv_web_2:
    restart: on-failure
    image: heartexlabs/label-studio:latest
    container_name: label-studio-web-2
    ports:
      - "8081:8080"
    networks:
      - ls_network
    volumes:
      - ${LS_PATH}/pv_project_2:/label-studio/pv_project
      - ./config/pv_config.xml:/pv_config.xml
      - ${LS_PATH}/pv_tasks:/pv_tasks
    command: label-studio start pv_project --init --force --label-config=/pv_config.xml --input-path=/pv_tasks --input-format=json-dir
  ls_pv_web_3:
    restart: on-failure
    image: heartexlabs/label-studio:latest
    container_name: label-studio-web-3
    ports:
      - "8082:8080"
    networks:
      - ls_network
    volumes:
      - ${LS_PATH}/pv_project_3:/label-studio/pv_project
      - ./config/pv_config.xml:/pv_config.xml
      - ${LS_PATH}/pv_tasks:/pv_tasks
    command: label-studio start pv_project --init --force --label-config=/pv_config.xml --input-path=/pv_tasks --input-format=json-dir
  ls:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    image: ls-image
    container_name: label-studio-dev
    networks:
      - ls_network
    volumes:
      - ./ls:/code/ls
      - ${LS_PATH}:/label_studio
    environment:
      - CRATE_DB_IP=${CRATE_DB_IP}
    stdin_open: true
    tty: true

networks:
  ls_network:
    driver: bridge