### GENERAL DATA VARIABLES ###

# The path to the directory for storing all Label Studio projects (including tasks and exported annotations) and all data programming / modelling artifacts and experiment runs.
DATA_PATH=./example_data
# The path to the directory for CrateDB. If your SQLAlchemy database is stored on a remote server, then you can ignore this and delete the cratedb service from docker-compose.yml. If you want your database to be set up remotely but have not created it yet, then you can extract the cratedb service from docker-compose.yml and use it to set CrateDB up on the remote server and set this variable.
DB_DATA_PATH=./crate
# If your CrateDB database is stored on a remote server, then change crate-db to the IP address of the host machine. If your database is supported by SQLAlchemy but is not specifically CrateDB, then refer to the additional installation notes at the bottom of the README.
DATABASE_IP=crate://crate-db:4200

### LABEL STUDIO VARIABLES ###

# The path to where Label Studio will store data, and where the subdirectories for import and exporting data can be found. Feel free to rename this directory, but remember to change it in docker-compose.yml if you do.
LS_PATH=${DATA_PATH}/ls
# The path to where Label Studio will store data.
LS_DATA_PATH=${LS_PATH}/data
# The path to the directory where ADaPT-ML will store Label Studio task-formatted data samples. Feel free to rename this directory, but remember to change it in docker-compose.yml if you do.
LS_TASKS_PATH=${LS_PATH}/tasks
# The path to where annotations exported from Label Studio, and classification task-specific subdirectories for the processed annotation DataFrames, will be stored. Feel free to rename this directory, but remember to change it in docker-compose.yml if you do.
LS_ANNOTATIONS_PATH=${LS_PATH}/annotations

### DATA PROGRAMMING VARIABLES ###

# The path to where ADaPT-ML will store all data programming data -- the mlruns for MLflow, dbdata for the model database, unlabeled data, and labeled data. Feel free to rename the data programming directory, but remember to change it in docker-compose.yml if you do.
DP_DATA_PATH=${DATA_PATH}/dp
# The data programming MLflow database. Feel free to rename it or leave it as-is.
DP_MYSQL_DATABASE=mlruns.db
# Set the following username, password, and root password variables to your preferences.
DP_MYSQL_USER=mysqluser
DP_MYSQL_PASSWORD=mysqlpassword
DP_MYSQL_ROOT_PASSWORD=mysqlrootpassword
# Leave these variables as-is.
DP_HOST_NAME=dp-mlflow-db
DP_MLFLOW_TRACKING_URI=mysql+pymysql://${DP_MYSQL_USER}:${DP_MYSQL_PASSWORD}@${DP_HOST_NAME}:3306/${DP_MYSQL_DATABASE}

### MODELLING VARIABLES ###

# The path to where ADaPT-ML will store all modelling data -- the mlruns for MLflow, dbdata for the model database, train data, and test data. Feel free to rename the modelling directory, but remember to change it in docker-compose.yml if you do.
MODELLING_DATA_PATH=${DATA_PATH}/m
# The modelling MLflow database. Feel free to rename it or leave it as-is.
MODELLING_MYSQL_DATABASE=mlruns.db
# Set the following username, password, and root password variables to your preferences.
MODELLING_MYSQL_USER=mysqluser
MODELLING_MYSQL_PASSWORD=mysqlpassword
MODELLING_MYSQL_ROOT_PASSWORD=mysqlrootpassword
# Leave these variables as-is.
MODELLING_HOST_NAME=modelling-mlflow-db
MODELLING_MLFLOW_TRACKING_URI=mysql+pymysql://${MODELLING_MYSQL_USER}:${MODELLING_MYSQL_PASSWORD}@${MODELLING_HOST_NAME}:3306/${MODELLING_MYSQL_DATABASE}

### DEPLOYMENT-READY END MODEL VARIABLES ###

# The paths to End Models that are ready to be deployed. Once you have a model ready, create a variable and set it to the mlruns-relative path to the desired python_model.pkl
MULTICLASS_EXAMPLE_MODEL_PATH=/mlruns/multiclass_model.pkl
MULTILABEL_EXAMPLE_MODEL_PATH=/mlruns/multilabel_model.pkl
